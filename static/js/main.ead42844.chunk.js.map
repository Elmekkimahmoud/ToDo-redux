{"version":3,"sources":["listTasks.js","addTask.js","App.js","reducers/reducer1.js","reducers/reducer2.js","store/store.js","index.js"],"names":["List","className","id","this","props","list12","map","el","index","key","onClick","CompltFunc","txst","Delfunction","style","textDecoration","valu","Component","connect","firstreduc","inputvall","secondreduc","dispatch","x","type","el2","y","ind","Addtask","placeholder","onChange","e","changeTask","target","value","addList","imp","i","inp","App","list","ListReducer","state","action","filter","list1","val","addReducer","store","createStore","combineReducers","render","document","getElementById"],"mappings":"qRAEMA,E,iLAEQ,IAAD,OACL,OACA,yBAAKC,UAAU,YAAYC,GAAG,OACzBC,KAAKC,MAAMC,OAAOC,KAAI,SAACC,EAAIC,GAAL,OAAc,yBAAKC,IAAMD,EAAOP,UAAU,SACjE,4BAAQA,UAAU,WAAYS,QAAS,kBAAK,EAAKN,MAAMO,WAAWH,KAAlE,IAAwF,gBAAVD,EAAGK,KAAsB,OAAO,WAA9G,OAEA,4BAAQX,UAAU,SAAUS,QAAS,kBAAI,EAAKN,MAAMS,YAAYN,KAAhE,WAGA,0BAAMO,MAAO,CAACC,eAAeR,EAAGK,OAAQL,EAAGS,e,GAXpCC,aA2CJC,eAVa,SAAC,GACrB,MAAO,CACNb,OAFiD,EAA5Bc,WAGrBC,UAHiD,EAAjBC,gBAVV,SAACC,GACxB,MAAO,CACPT,YAAY,SAACU,GAAKD,EAAS,CAACE,KAAK,SAASC,IAAIF,KAE9CZ,WAAW,SAACe,GAAKJ,EAAS,CAACE,KAAK,WAAWG,IAAID,QAgBxCR,CAA4ClB,GC3CrD4B,E,iLAEQ,IAAD,OACL,OACA,6BACI,gCACI,yBAAK3B,UAAU,OACX,0CACA,6CACA,2BAAOuB,KAAK,OAAQtB,GAAG,aAAa2B,YAAY,iBAAiBC,SAAU,SAACC,GAAD,OAAK,EAAK3B,MAAM4B,WAAWD,EAAEE,OAAOC,UAC/G,4BAAQhC,GAAG,SAAQQ,QAAS,kBAAK,EAAKN,MAAM+B,QAAQ,EAAK/B,MAAMgB,aAA/D,WAMR,6BAASnB,UAAU,WACf,6BACI,0DAEJ,yBAAKA,UAAU,gB,GApBTgB,aAgDPC,eATc,SAAC,GACtB,MAAO,CACNb,OAFkD,EAA5Bc,WAGtBC,UAHkD,EAAjBC,gBAXX,SAACC,GACxB,MAAO,CAEPU,WAAW,SAACD,GAAMT,EAAS,CAACE,KAAK,SAASY,IAAIL,KAC9CI,QAAQ,SAACE,GAAMf,EAAS,CAACE,KAAK,MAAMc,IAAID,QAgBjCnB,CAA4CU,GCvB5CW,E,iLAfX,OACD,iCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GARatB,a,eCaZuB,EAAO,GA8CEC,EAtBK,WAA2B,IAA1BC,EAAyB,uDAAlBF,EAAOG,EAAW,uCAE5C,OAAQA,EAAOnB,MACf,IAAK,SACA,OAAQkB,EAAME,QAAO,SAAArC,GAAE,OAAEA,IAAKoC,EAAOlB,OAC1C,IAAK,WACA,OAAQiB,EAAME,QAAO,SAACrC,EAAG8B,GACxB,OAAGA,GAAGM,EAAOhB,IAAcpB,EAAGK,KAAM,eACtBL,EAAGK,KAAML,EAAGK,QAChC,IAAK,MACD,MAAM,GAAN,mBAAW8B,GAAX,CAAiB,CAAC1B,KAAK2B,EAAOL,IAAK1B,KAAK,UAG1C,QAAS,OAAO8B,ICzDdG,EAAQ,CAACC,IAAI,OA4BFC,EAZE,WAA4B,IAA3BL,EAA0B,uDAAnBG,EAAQF,EAAW,uCAE1C,OAAQA,EAAOnB,MACf,IAAK,SACA,OAAQqB,EAAMC,IAAMH,EAAOP,IAE9B,QAAS,OAAOM,ICfPM,EAHFC,YAAYC,YAAgB,CAAC/B,WAAYsB,EAAapB,YAAY0B,KCG/EI,iBAAO,kBAAC,IAAD,CAAUH,MAAOA,GAAO,kBAAC,EAAD,MAAxB,KAA6CI,SAASC,eAAe,W","file":"static/js/main.ead42844.chunk.js","sourcesContent":["import {connect} from 'react-redux';\r\nimport React, { Component } from 'react';\r\nclass List extends Component {\r\n  \r\n    render() { \r\n        return (\r\n        <div className=\"edit-task\" id=\"old\">\r\n            {this.props.list12.map((el, index)=> <div key= {index} className='items'>\r\n            <button className=\"complete\"  onClick={()=> this.props.CompltFunc(index)}  > {el.txst== 'line-through'?'Undo':'Complete'}   </button>\r\n       \r\n            <button className=\"delete\"  onClick={()=>this.props.Delfunction(el)}  > delete</button>\r\n      \r\n      \r\n            <span style={{textDecoration:el.txst}}>{el.valu}</span>\r\n            \r\n      \r\n            </div> )}\r\n      \r\n      </div>\r\n          );\r\n    }\r\n}\r\n\r\n\r\n\r\n    const mapDispatchToProps = (dispatch) => {\r\n        return {\r\n        Delfunction:(x)=>{dispatch({type:'DELETE',el2:x})},\r\n        \r\n        CompltFunc:(y)=>{dispatch({type:'COMPLETE',ind:y})},\r\n\r\n        }\r\n    \r\n    }\r\n\r\n    const mapStateToProps = ({firstreduc,secondreduc}) => {\r\n        return {\r\n         list12:firstreduc,\r\n         inputvall:secondreduc,\r\n       \r\n          }\r\n    }\r\n\r\n\r\n \r\nexport default connect(mapStateToProps,mapDispatchToProps)(List);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nclass Addtask extends Component {\r\n    \r\n    render() { \r\n        return ( \r\n        <div>\r\n            <header>\r\n                <div className=\"add\">\r\n                    <h1>To-Do App!</h1>\r\n                    <h4>Add New To-Do</h4>\r\n                    <input type=\"text\"  id=\"input-task\" placeholder=\"Enter new task\" onChange={(e)=>this.props.changeTask(e.target.value)} />  \r\n                    <button id=\"butadd\"onClick={()=> this.props.addList(this.props.inputvall)}> Add </button> \r\n                </div>\r\n\r\n            </header>\r\n\r\n\r\n            <section className=\"main-up\">\r\n                <div>\r\n                    <h2>Let's get some work done!</h2>\r\n                </div>\r\n                <div className=\"ligne\">\r\n                </div>\r\n            </section>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n\r\n    const mapDispatchToProps = (dispatch) => {\r\n        return {\r\n        \r\n        changeTask:(e)=> {dispatch({type:'CHANGE',imp:e}) } ,\r\n        addList:(i)=> {dispatch({type:'ADD',inp:i}) } ,\r\n    \r\n        }\r\n    \r\n     }\r\n\r\n\r\n     const mapStateToProps = ({firstreduc,secondreduc}) => {\r\n        return {\r\n         list12:firstreduc,\r\n         inputvall:secondreduc,\r\n       \r\n          }\r\n    }\r\n\r\n \r\nexport default connect(mapStateToProps,mapDispatchToProps)(Addtask);","\nimport React, { Component } from 'react';\nimport './App.css';\nimport List from './listTasks' ;\nimport Addtask from './addTask' ;\n\n \nclass App extends Component {\n\n\n \n   render() {\n    return (\n   <section>\n     <Addtask/>\n     <List/> \n   </section>\n   );\n  }\n}\n\n\n\n\n\n\n\nexport default App ;","\r\n/*const initialState = {\r\n    list: ['sami','taher'] , inputValue:''\r\n  };\r\n\r\n\r\nconst myreducer=(state= initialState, action)=> {\r\n    if (action.type == 'ADD') {\r\n        return  { list: [...state.list, state.inputValue]};\r\n    }\r\n      return state;\r\n}\r\n\r\n\r\n\r\n\r\nexport default myreducer ;*/\r\n\r\n\r\n\r\nconst list = [] \r\n\r\n\r\n// const deleteIndex = this.state.list //etape1 : declarer newlist \r\n  \r\n// this.state.list.splice(index,1) // etape2 : return tab les element sauf el selectionner a traver l'index\r\n \r\n//  this.setState({\r\n//    list: deleteIndex\r\n// })\r\n\r\n\r\n/*changStyle=(index)=>{\r\n  const chanstl = this.state.list.filter((el,i)=>{\r\n      if(index==i) {return el.txt= 'line-through'   }\r\n      else { return el.txt= el.txt }\r\n  }   )\r\n  this.setState({\r\n      list: chanstl\r\n  })\r\n}\r\n */\r\n\r\n\r\nconst ListReducer = (state =list , action) => {\r\n\r\n  switch (action.type) {\r\n  case 'DELETE':\r\n       return  state.filter(el=>el!==action.el2)\r\n  case 'COMPLETE':\r\n       return  state.filter((el,i)=>{\r\n        if(i==action.ind) { return el.txst= 'line-through'}\r\n        else { return el.txst= el.txst } })\r\n  case 'ADD':\r\n      return [...state,{valu:action.inp, txst:'none'}]\r\n  \r\n      \r\n    default: return state   \r\n  }\r\n\r\n\r\n\r\n     \r\n  \r\n}\r\n\r\nexport default ListReducer ;","const list1 = {val:\"ccc\", }\r\n\r\n// changeTask=(e)=>{\r\n            \r\n//     this.setState({inputValue: e.target.value});\r\n    \r\n//     }\r\n\r\n// addList=()=>{\r\n//     this.setState({\r\n//         list:[...this.state.list, {\"val\":this.state.inputValue,\"txt\":\"none\"}]\r\n//     })\r\n   \r\n// }\r\n\r\n\r\nconst addReducer = (state =list1 , action) => {\r\n\r\n    switch (action.type) {\r\n    case 'CHANGE':\r\n         return  list1.val = action.imp\r\n    \r\n      default: return state   \r\n    }\r\n    \r\n}\r\n\r\n  \r\n  export default addReducer ;","import {createStore,combineReducers} from \"redux\";\r\nimport ListReducer from '../reducers/reducer1' ;\r\nimport addReducer from '../reducers/reducer2'\r\n\r\nconst store= createStore(combineReducers({firstreduc: ListReducer, secondreduc:addReducer}))\r\n\r\n\r\nexport default store ;","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/store';\nimport {Provider} from 'react-redux' ;\n\nrender(<Provider store={store}><App /> </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}